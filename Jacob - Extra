let level = 1;
let userState = "home"
let attemptNum = 0
let numbers = [1,2,3]
let timeLimit = 3;
let questionNum;
let countdown;
let presentTime = 0

function setup() {
  createCanvas(700, 600);
}

function draw() {
  background('#0096FF')
  home = createButton("Home")
  home.position(600,530)
  home.size(70,40)
  home.style("font-size", "20px")
  home.mousePressed(homeScreen)
  
  if (userState == "home") {
    gameSelection = createButton("Game Selection");
    gameSelection.position(217,340);
    gameSelection.style('color:#0096FF');
    gameSelection.style('font-size','35px')
    gameSelection.mousePressed(gameSelect)
    
    fill("white")
    rect(200,170,300,80,40)
    triangle1 = triangle(45*2,30*2,80*2,70*2,25*2,80*2);
    rect1 = rect(600-90,30*2,160,70);
    ellipse1 = ellipse(120,460,120,90)
    arc1 = arc(700-120,510,80,200,400,88,PIE)
    fill("black")
    text("Project FMS",213,227)
    textSize(50)
  }
  
  if (userState == "gameSelection") {
    memory = createButton("Memory");
    memory.position(80,350);
    memory.style('color:#0096FF');
    memory.style('font-size','35px')
    memory.mousePressed(selectMemory);
  
    matching = createButton("Reaction");
    matching.position(275,350);
    matching.style('color:#0096FF');
    matching.style('font-size','35px')
    matching.mousePressed(selectReaction);
  
    tracing = createButton("Tracing");
    tracing.position(485,350);
    tracing.style('color:#0096FF');
    tracing.style('font-size','35px')
    tracing.mousePressed(selectTracing);
    
    let FMS;
    fill("white")
    rect(200,170,300,80,40)
    fill("black")
    FMS = text("Project FMS",213,227)
    textSize(50)
  }
  
  if (userState == "lose") {
    fill("white")
    rect(150,100,400,150)
    fill("black")
    text("You Lost",250,190)
    textSize(50)
    
    home.position(300,430);
    home.size(100,70)
    home.style('color:#0096FF');
    home.style('font-size','25px');
    home.mousePressed(homeScreen);
  }
  
  if (userState == "win") {
    fill("white")
    rect(150,100,400,150)
    fill("black")
    text("You Win!!!",250,190)
    textSize(50)
    
    home.position(300,430);
    home.size(100,70)
    home.style('color:#0096FF');
    home.style('font-size','25px');
    home.mousePressed(homeScreen);
  }
  
  //
  // Below are all the Tracing Game unique userStates
  //
  
  if (userState == "startTracing") {
    fill("white")
    rect(350-75,170,150,60, 40);
    rect(135,280,430,100)
    fill("black")
    let titleText = text("Tracing",290,212);
    titleText.textAlign();
    titleText.textSize(18);
    let instrText = text("Instructions: Move your mouse from the \"Start\" region  through the white rectangles to the \"Finish\" region. Pass each of the 3 levels in 3 tries to win.", 145, 290, 430, 200)
    instrText.textAlign();
    instrText.textSize(35);
    
    back = createButton("Back")
    back.position(30,530)
    back.size(70,40)
    back.style("font-size", "20px")
    back.mousePressed(gameSelect)
    
    start = createButton("Start")
    start.position(300,430);
    start.size(100,70)
    start.style('color:#0096FF');
    start.style('font-size','25px');
    start.mousePressed(next);
    
    numDrawing = random(numbers)
  } 
  
  if (userState == "tryAgain") {
    fill("white")
    let r1 = rect(150,100,400,150)
    fill("black")
    text("Attempts remaining: " + (3 - attemptNum),20,50)  
    text("Level: " + level + " / 3",550,51)
    textSize(50)
    r1.text("Not Quite",250,188)
    r1.textSize(25)
    
    retry = createButton("Try Again")
    retry.position(300,430)
    retry.size(100,70)
    retry.style("font-size", "22px")
    retry.mousePressed(next)
  }
  
  if (userState == "nextLevel") {
    fill("white")
    let r1 = rect(150,100,400,150)
    fill("black")
    text("Next Level: " + level + " / 3",492,51)
    textSize(50)
    r1.text("Great Job!",240,188)
    r1.textSize(25)
    
    nextLvl = createButton("Next Level")
    nextLvl.position(300,430)
    nextLvl.size(100,70)
    nextLvl.style("font-size", "22px")
    nextLvl.mousePressed(next)
  }
  
  if (userState == "play") {
    fill("black")
    text("Attempts remaining: " + (3 - attemptNum),20,50)
    text("Level: " + level + " / 3",550,51)
    
    let correct = createDiv("")
    incorrect1 = createDiv("")
    incorrect2 = createDiv("")
    incorrect3 = createDiv("")
    incorrect4 = createDiv("")
    incorrect5 = createDiv("")
    incorrect6 = createDiv("")
    incorrect7 = createDiv("")
    incorrect8 = createDiv("")
    incorrect9 = createDiv("")
    incorrect10 = createDiv("")
    incorrect11 = createDiv("")
    incorrect12 = createDiv("")
    
    incorrect1.mouseOver(oops)
    incorrect2.mouseOver(oops)
    incorrect3.mouseOver(oops)
    incorrect4.mouseOver(oops)
    incorrect5.mouseOver(oops)
    incorrect6.mouseOver(oops)
    incorrect7.mouseOver(oops)
    incorrect8.mouseOver(oops)
    incorrect9.mouseOver(oops)
    incorrect10.mouseOver(oops)
    incorrect11.mouseOver(oops)
    incorrect12.mouseOver(oops)
    
    if (level == 1) {
      correct.mouseOver(goodJob)
      
      if(numDrawing == 1) {
        fill("white")
        rect(200,420,200,80)
        rect(200,100,100,320)
        fill("black")
        let startLvl = text("Start", 320, 470)
        textSize(25)
        let finish = text("Finish", 215, 140)
  
        correct.position(200,100)
        correct.size(100,70) 
            
        incorrect1.position(0,0)
        incorrect1.size(200,600)
        
        incorrect2.position(0,500)
        incorrect2.size(700,100)
        
        incorrect3.position(0,0)
        incorrect3.size(700,100)
        
        incorrect4.position(400,0)
        incorrect4.size(300,600)
        
        incorrect5.position(300,0)
        incorrect5.size(300,420)
      }
      if(numDrawing == 2) {
        fill("white")
        rect(300,420,200,80)
        rect(400,100,100,320)
        fill("black")
        let startLvl = text("Start", 320, 470)
        startLvl.textSize(25)
        let finish = text("Finish", 415, 140)
        finish.textSize(25)
        
        correct.position(400,100)
        correct.size(100,70) 
            
        incorrect1.position(0,0)
        incorrect1.size(300,600)
        
        incorrect2.position(0,0)
        incorrect2.size(700,100)
        
        incorrect3.position(0,0)
        incorrect3.size(400,420)
        
        incorrect4.position(500,0)
        incorrect4.size(200,600)
        
        incorrect5.position(0,500)
        incorrect5.size(700,100)
      }
      if(numDrawing == 3) {
        fill("white")
        rect(300,100,100,400)
        fill("black")
        let startLvl = text("Start", 320, 470)
        textSize(25)
        let finish = text("Finish", 315, 140)
      
        correct.position(300,100)
        correct.size(100,70)
        
        incorrect1.position(0,0)
        incorrect1.size(300,600)
        
        incorrect2.position(0,500)
        incorrect2.size(700,100)
        
        incorrect3.position(0,0)
        incorrect3.size(700,100)
        
        incorrect4.position(400,0)
        incorrect4.size(300,600)
      }    
    }  
    
    if (level == 2) {
      correct.mouseOver(goodJob)
      if(numDrawing == 1) {
        fill("white")
        rect(100,430,300,70)
        rect(100,300,60,130)
        rect(300,100,100,200)
        rect(160,300,240,50)
        fill("black")
        let startLvl = text("Start", 320, 470)
        textSize(25)
        let finish = text("Finish", 315, 135)       
      
        correct.position(308,100)
        correct.size(80,80)
        
        incorrect1.position(0,0)
        incorrect1.size(300,300)
        
        incorrect2.position(400,0)
        incorrect2.size(400,600)
        
        incorrect3.position(160,350)
        incorrect3.size(540,80)
        
        incorrect4.position(0,0)
        incorrect4.size(700,100)
        
        incorrect5.position(0,0)
        incorrect5.size(100,600)
        
        incorrect6.position(0,500)
        incorrect6.size(700,100)
      }
      if(numDrawing == 2) {
        fill("white")
        rect(300,430,300,70)
        rect(540,200,60,230)
        rect(300,200,240,50)
        rect(300,100,100,100)
        fill("black")
        let startLvl = text("Start", 320, 470)
        textSize(25)
        let finish = text("Finish", 315, 135)       
      
        correct.position(308,100)
        correct.size(80,70)
        
        incorrect1.position(0,0)
        incorrect1.size(300,600)
        
        incorrect2.position(400,0)
        incorrect2.size(300,200)
        
        incorrect3.position(300,250)
        incorrect3.size(240,180)
        
        incorrect4.position(0,0)
        incorrect4.size(700,100)
        
        incorrect5.position(600,0)
        incorrect5.size(100,600)
        
        incorrect6.position(0,500)
        incorrect6.size(700,100)
      }
      if(numDrawing == 3) {
        fill("white")
        rect(300,300,100,200)
        rect(400,300,200,50)
        rect(550,100,50,200)
        rect(300,100,250,50)
        fill("black")
        let startLvl = text("Start", 320, 470)
        textSize(25)
        let finish = text("Finish", 315, 135)
      
        correct.position(300,100)
        correct.size(100,50)
        
        incorrect1.position(0,0)
        incorrect1.size(300,600)
        
        incorrect2.position(300,0)
        incorrect2.size(400,100)
        
        incorrect3.position(600,100)
        incorrect3.size(100,500)
        
        incorrect4.position(400,350)
        incorrect4.size(200,150)
        
        incorrect5.position(0,500)
        incorrect5.size(700,100)
        
        incorrect6.position(300,150)
        incorrect6.size(250,150)
      }
    }
  
    if (level == 3) {
      correct.mouseOver(youWin);
      if(numDrawing == 1) {
        fill("white")
        rect(300,430,290,70)
        rect(540,100,50,330)
        rect(440,100,100,45)
        rect(440,145,40,205)
        rect(200,315,240,35)
        rect(200,100,80,215)
        fill("black")
        let startLvl = text("Start", 320, 470)
        textSize(25)
        let finish = text("Finish", 207, 135)
      
        correct.position(200,100)
        correct.size(80,70)
        
        incorrect1.position(0,0)
        incorrect1.size(200,600)
        
        incorrect2.position(280,0)
        incorrect2.size(160,315)
        
        incorrect3.position(590,0)
        incorrect3.size(110,600)
        
        incorrect4.position(0,0)
        incorrect4.size(700,100)
        
        incorrect5.position(0,500)
        incorrect5.size(700,100)
        
        incorrect6.position(200,350)
        incorrect6.size(100,250)
        
        incorrect7.position(0,350)
        incorrect7.size(540,80)
        
        incorrect8.position(480,145)
        incorrect8.size(60,285)
      }
      if(numDrawing == 2) {
        fill("white")
        rect(310,380,80,120)
        rect(390,380,210,50)
        rect(555,145,45,235)
        rect(450,145,105,40)
        rect(450,145,40,205)
        rect(200,315,250,35)
        fill("black")
        let startLvl = text("Start", 320, 470)
        textSize(25)
        let finish = text("Finish", 207, 340)
      
        correct.position(200,315)
        correct.size(80,35)
        
        incorrect1.position(0,0)
        incorrect1.size(200,600)
        
        incorrect2.position(0,0)
        incorrect2.size(700,145)
        
        incorrect3.position(0,500)
        incorrect3.size(700,600)
        
        incorrect4.position(600,0)
        incorrect4.size(100,600)
        
        incorrect5.position(0,0)
        incorrect5.size(450,315)
        
        incorrect6.position(0,340)
        incorrect6.size(310,260)
        
        incorrect7.position(0,350)
        incorrect7.size(555,40)
        
        incorrect8.position(490,185)
        incorrect8.size(65,165)
        
        incorrect9.position(400,430)
        incorrect9.size(300,170)
      }
      if(numDrawing == 3) {
        fill("white")
        rect(100,420,300,80)
        rect(100,300,60,120)
        rect(160,300,400,50)
        rect(510,350,50,100)
        rect(560,410,80,40)
        rect(600,100,40,310)
        rect(300,100,300,35)
        fill("black")
        let startLvl = text("Start", 320, 470)
        textSize(25)
        let finish = text("Finish", 315, 126)
      
        correct.position(300,100)
        correct.size(100,35)
        
        incorrect1.position(0,0)
        incorrect1.size(300,300)
        
        incorrect2.position(300,0)
        incorrect2.size(400,100)
        
        incorrect3.position(640,100)
        incorrect3.size(60,500)
        
        incorrect4.position(640,100)
        incorrect4.size(70,150)
        
        incorrect5.position(400,450)
        incorrect5.size(300,150)
        
        incorrect6.position(400,350)
        incorrect6.size(110,250)
        
        incorrect7.position(160,350)
        incorrect7.size(240,70)
        
        incorrect8.position(0,500)
        incorrect8.size(700,100)
        
        incorrect9.position(640,100)
        incorrect9.size(60,500)
        
        incorrect10.position(0,0)
        incorrect10.size(100,600)
        
        incorrect11.position(300,135)
        incorrect11.size(260,160)
        
        incorrect12.position(560,135)
        incorrect12.size(40,275)
      }
    }
  }
  if (attemptNum >= 3) {
    gameOver();
  }
  
  //
  // Below are all the Memory Game unique userState's
  //
  
  if (userState == "selectMemory") {
    fill("white")
    rect(130,280,440,100)
    rect(350-75,170,150,60, 40);
    fill("black")
    let titleText = text("Memory",287,212);
    titleText.textSize(18);
    let instrText = text("Instructions: The next screen will show an image with multiple shapes of different colors. After 3 seconds, the page will disappear and a question will be asked about a detail of the image. Get 3 correct to win.", 137, 286, 430, 200)
    instrText.textSize(35);
    
    back = createButton("Back")
    back.position(30,530)
    back.size(70,40)
    back.style("font-size", "20px")
    back.mousePressed(gameSelect)
    
    start = createButton("Start")
    start.position(300,430);
    start.size(100,70)
    start.style('color:#0096FF');
    start.style('font-size','25px');
    start.mousePressed(memoryNext);
  }
  
  if (userState == "memoryNextLevel") {
    fill("black")
    textAlign(LEFT)
    text("Next Level: " + level + " / 3",492,51)
    textSize(50)
    
    fill("white")
    rect(150,100,400,150)
    fill("black")
    text("Great Job!",240,188)
    textSize(25)
    
    nextLvl = createButton("Next Level")
    nextLvl.position(300,430)
    nextLvl.size(100,70)
    nextLvl.style("font-size", "22px")
    nextLvl.mousePressed(memoryNext)
  }
  
  if (userState == "imageMemory") {
    countDown = timeLimit - presentTime;
    textAlign(LEFT)
    textSize(24);
    fill("black")
    text("TIME LEFT: " + countDown, 25, 575);
    if (frameCount % 60 ==0) {
      presentTime++;
    }
    if (countDown < 0) {
      advance()
    }
    if (level == 1) {
      fill("black")
      textSize(50);
      textAlign(CENTER)
      text("LEVEL 1", 350, 60);
      
      fill('#FDF800');
      circle(150, 350, 230);
      fill('#FF1111');
      triangle(450, 200, 450, 350, 600, 350);
      fill('Green');
      rect(100, 100, 200, 100)
      fill("purple");
      polygon(600, 150, 70, 5);
      polygon(350, 450, 80, 5);
      
    }
    if(level == 2) {
      textSize(50);
      textAlign(CENTER)
      text("LEVEL 2", 350, 60);
      
      fill('#FF1111');
      circle(400, 250, 50);
      fill('#white');
      triangle(450, 200, 450, 350, 600, 350);
      fill('blue');
      rect(50, 500, 20, 10)
      fill('blue');
      rect(150, 350, 20, 10)
      fill("green");
      polygon(450, 150, 70, 6);
      polygon(350, 450, 80, 6);
    }
    if(level == 3) {
      textSize(50);
      textAlign(CENTER)
      text("LEVEL 3", 350, 60);
      
      fill('#FDF800');
      circle(150, 350, 230);
      fill('#FF1111');
      triangle(450, 200, 450, 350, 600, 350);
      fill('Green');
      rect(100, 100, 200, 100)
      fill("purple");
      polygon(600, 150, 70, 5);
      polygon(350, 450, 80, 5);
    }
  }
  if (userState == "questionMemory")  {
    if (level == 1) {
      answer1 = createButton('Purple Pentagons');
      answer1.position(50, 100);
      answer1.size(300,200);
      answer1.style("font-size", "25px")
      
      answer2 = createButton("Red Triangles");
      answer2.position(350, 100);
      answer2.size(300,200);
      answer2.style("font-size", "25px")
      
      answer3 = createButton("Yellow Circles");
      answer3.position(350, 300);
      answer3.size(300,200);
      answer3.style("font-size", "25px")
      
      answer4 = createButton("Green Rectangles");
      answer4.position(50, 300);
      answer4.size(300,200);
      answer4.style("font-size", "25px")
      
      if (questionNum == 1) {
        fill("black")
        textSize(30);
        let questionText = text("Which shape appeared the most? (2x)", 350, 60);
        textAlign(CENTER)
        
        answer1.mousePressed(correct);
        answer2.mousePressed(gameOver);
        answer3.mousePressed(gameOver);
        answer4.mousePressed(gameOver);
      }
      if (questionNum == 2) {
        fill("black")
        textSize(30);
        let questionText = text("Which shape was farthest to the right?", 350, 60);
        textAlign(CENTER)
        
        answer1.mousePressed(correct);
        answer2.mousePressed(gameOver);
        answer3.mousePressed(gameOver);
        answer4.mousePressed(gameOver);
      }
      if (questionNum == 3) {
        fill("black")
        textSize(30);
        let questionText = text("Which shape was the largest?", 350, 60); 
        textAlign(CENTER)
        
        answer1.mousePressed(gameOver);
        answer2.mousePressed(gameOver);
        answer3.mousePressed(correct);
        answer4.mousePressed(gameOver);
      }
    }
    if (level == 2) {
      answer1 = createButton("Blue Rectangles");
      answer1.position(50, 100);
      answer1.size(300,200);
      answer1.style("font-size", "25px")
      
      answer2 = createButton("White Triangles");
      answer2.position(350, 100);
      answer2.size(300,200);
      answer2.style("font-size", "25px")
      
      answer3 = createButton("Red Circles");
      answer3.position(350, 300);
      answer3.size(300,200);
      answer3.style("font-size", "25px")
      
      answer4 = createButton("Green Hexagons");
      answer4.position(50, 300);
      answer4.size(300,200);
      answer4.style("font-size", "25px")
      if (questionNum == 1) {
        fill("black")
        textSize(30);
        let questionText = text("What shape was the smallest?", 350, 60);
        textAlign(CENTER)
        
        answer1.mousePressed(correct);
        answer2.mousePressed(gameOver);
        answer3.mousePressed(gameOver);
        answer4.mousePressed(gameOver);
      }
      if (questionNum == 2) {
        fill("black")
        textSize(30);
        let questionText = text("What shape was in the top left corner?", 350, 60);
        textAlign(CENTER)
        
        answer1.mousePressed(correct);
        answer2.mousePressed(gameOver);
        answer3.mousePressed(gameOver);
        answer4.mousePressed(gameOver);
      }
      if (questionNum == 3) {
        fill("black")
        textSize(30);
        let questionText = text("What shape appeared the least?", 350, 60);
        textAlign(CENTER)
        
        answer1.mousePressed(correct);
        answer2.mousePressed(gameOver);
        answer3.mousePressed(gameOver);
        answer4.mousePressed(gameOver);
      }
    }
    if (level == 3) {
      if (questionNum == 1) {
        
      }
      if (questionNum == 2) {
        
      }
      if (questionNum == 3) {
        
      }
    }
  }
}

function goodJob() {
  level = level + 1;
  attemptNum = 0;
  userState = "nextLevel";
  numDrawing = random(numbers)
  removeElements()
}

function oops() {
  userState = "tryAgain"
  ++attemptNum
  removeElements()
}

function next() {
  userState = "play"
  removeElements()
}

function youWin() {
  userState = "win"
  attemptNum = 0;
  level = 1;
  removeElements()
}

function homeScreen() {
  userState = "home"
  level = 1;
  attemptNum = 0;
  textAlign(LEFT)
  removeElements()
}

function gameOver() {
  userState = "lose"
  attemptNum = 0;
  level = 1;
  textAlign(LEFT)
  removeElements()
}

function gameSelect() {
  userState = "gameSelection"
  textAlign(LEFT)
  removeElements()
}

function selectTracing() {
  userState = "startTracing"
  removeElements()
}

function selectMemory() {
  userState = "selectMemory"
  removeElements()
}

function selectReaction() {
  userState = "startReaction"
  removeElements()
}

function correct() {
  level = level + 1;
  attemptNum = 0;
  userState = "memoryNextLevel";
  numDrawing = random(numbers)
  removeElements()
}

function memoryNext() {
  userState = "imageMemory";
  removeElements();
  frameCount = 0;
  presentTime = 0;
}

function advance() {
  userState = "questionMemory"
  questionNum = random(numbers)
  removeElements()
}

function polygon(x, y, radius, npoints) {
  let angle = TWO_PI / npoints;
  beginShape();
  for (let a = 0; a < TWO_PI; a += angle) {
    let sx = x + cos(a) * radius;
    let sy = y + sin(a) * radius;
    vertex(sx, sy);
  }
  endShape(CLOSE);
}

//Add any needed Reaction Time Functions here
